package ${javaPackage}.${entityPackage}.controller;

import ${javaPackage}.${entityPackage}.service.I${entityName}Service;
import lombok.extern.slf4j.Slf4j;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.Api;
<#if tableVo.isEmpty ==0>
import io.swagger.annotations.ApiOperation;
import com.lvhaifeng.cloud.common.vo.Result;
import ${javaPackage}.${entityPackage}.entity.${entityName};
import com.baomidou.mybatisplus.core.metadata.IPage;
</#if>

<#if tableVo.isCheckClient ==1>
import com.lvhaifeng.cloud.auth.client.annotation.CheckClientToken;
<#else>
</#if>
<#if tableVo.isCheckUser ==1>
import com.lvhaifeng.cloud.auth.user.annotation.CheckUserToken;
<#else>
</#if>

 /**
 * @Description: ${tableVo.ftlDescription}
 * @Author: haifeng.lv
 * @Date: ${.now?string["yyyy-MM-dd HH:mm"]}
 */
@Slf4j
@Api(tags="${tableVo.ftlDescription}")
@RestController
@RequestMapping("/${entityName?uncap_first}")
<#if tableVo.isCheckClient ==1>
@CheckClientToken
<#else>
</#if>
<#if tableVo.isCheckUser ==1>
@CheckUserToken
<#else>
</#if>
public class ${entityName}Controller {
	@Autowired
	private I${entityName}Service ${entityName?uncap_first}Service;
<#if tableVo.isEmpty ==0>
	/**
	 * 分页列表查询
	 * @param ${entityName?uncap_first}
	 * @param pageNo
	 * @param pageSize
	 * @param sortProp
	 * @param sortType
	 * @return
	 */
	@ApiOperation(value="${tableVo.ftlDescription}-分页列表查询", notes="${tableVo.ftlDescription}-分页列表查询")
	@GetMapping(value = "/get${entityName}PageList")
	public Result<IPage<${entityName}>> get${entityName}PageList(${entityName} ${entityName?uncap_first},
									  @RequestParam(name="pageNo", defaultValue="1") Integer pageNo,
                                      @RequestParam(name="pageSize", defaultValue="10") Integer pageSize,
                                      @RequestParam(name="sortProp", required = false) String sortProp,
                                      @RequestParam(name="sortType", required = false) String sortType) {
        Result<IPage<${entityName}>> result = new Result<>();
		IPage<${entityName}> pageList = ${entityName?uncap_first}Service.find${entityName}PageList(${entityName?uncap_first}, pageNo, pageSize, sortProp, sortType);
		result.setSuccess(true);
		result.setResult(pageList);
		return result;
	}
	
	/**
	 * 添加
	 * @param ${entityName?uncap_first}
	 * @return
	 */
	@ApiOperation(value="${tableVo.ftlDescription}-添加", notes="${tableVo.ftlDescription}-添加")
	@PostMapping(value = "/generate${entityName}")
	public Result<${entityName}> generate${entityName}(@RequestBody ${entityName} ${entityName?uncap_first}) {
		Result<${entityName}> result = new Result<>();
        ${entityName?uncap_first}Service.create${entityName}(${entityName?uncap_first});
        result.success("添加成功！");
		return result;
	}
	
	/**
	 * 编辑
	 * @param ${entityName?uncap_first}
	 * @return
	 */
	@ApiOperation(value="${tableVo.ftlDescription}-编辑", notes="${tableVo.ftlDescription}-编辑")
	@PutMapping(value = "/change${entityName}ById")
	public Result<${entityName}> change${entityName}ById(@RequestBody ${entityName} ${entityName?uncap_first}) {
		Result<${entityName}> result = new Result<>();
        ${entityName?uncap_first}Service.alter${entityName}ById(${entityName?uncap_first});
        result.success("编辑成功！");
		return result;
	}
	
	/**
	 * 通过id删除
	 * @param id
	 * @return
	 */
	@ApiOperation(value="${tableVo.ftlDescription}-通过id删除", notes="${tableVo.ftlDescription}-通过id删除")
	@DeleteMapping(value = "/expurgate${entityName}ById")
	public Result<?> expurgate${entityName}ById(@RequestParam(name="id",required=true) String id) {
        ${entityName?uncap_first}Service.drop${entityName}ById(id);
		return Result.ok("删除成功!");
	}
	
	/**
	 * 批量删除
	 * @param ids
	 * @return
	 */
	@ApiOperation(value="${tableVo.ftlDescription}-批量删除", notes="${tableVo.ftlDescription}-批量删除")
	@DeleteMapping(value = "/expurgate${entityName}Batch")
	public Result<?> expurgate${entityName}Batch(@RequestParam(name="ids",required=true) String ids) {
        ${entityName?uncap_first}Service.drop${entityName}Batch(ids);
		return Result.ok("删除成功!");
	}
	
	/**
	 * 通过id查询
	 * @param id
	 * @return
	 */
	@ApiOperation(value="${tableVo.ftlDescription}-通过id查询", notes="${tableVo.ftlDescription}-通过id查询")
	@GetMapping(value = "/get${entityName}ById")
	public Result<${entityName}> get${entityName}ById(@RequestParam(name="id",required=true) String id) {
		Result<${entityName}> result = new Result<>();
		${entityName} ${entityName?uncap_first} = ${entityName?uncap_first}Service.find${entityName}ById(id);
        result.setResult(${entityName?uncap_first});
        result.setSuccess(true);
		return result;
	}
</#if>
}
